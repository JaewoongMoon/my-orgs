#+TITLE: C# 코드 진단 가이드

* 개요
- 게임 앱이라면 유니티로 개발되어 있는 경우가 많다. 유니티는 주로 C#으로 개발된다. 
- 유니티로 개발된 소스 코드 (dll 파일)을 진단하는 방법을 설명한다. 
- dll 파일을 분석하기 위한 툴로 무료 .NET 디컴파일러인ILSpy 를 사용한다. 


* C# 코드 위치
보통 apk의 압축을 풀면 /assets/bin/Data/Managed/Assembly-CSharp.dll 파일이 있다. 이 파일을 ILSpy에 로드해서 확인한다. 


* ILSpy 설치 
다음 URL을 참고해서 설치한다. 

https://github.com/icsharpcode/ILSpy/releases

* Reflexil 확장 애드온 설치
- C# 어셈블리 코드를 수정할 수 있는 플러그인이다. 
- 다운로드 : http://reflexil.net/
- 다운로드하면 zip 파일이 다운로드된다. 
- 압축을 풀면 dll 파일이 있다. 이 것을 IlSpy가 설치된 폴더에 복사한다.
- 사용방법 : http://resources.infosecinstitute.com/damn-vulnerable-thick-client-app-part-10/#gref

* 사용방법
** 구동하기
- Ilspy를 재구동하면reflexil이 설치되어 있다. 
- 톱니바퀴를 클릭하면 다음과 같이 어셈블리 코드를 보여주는 패널이 나타난다.

** 어셈블리 코드 수정
- 어셈블리 코드 라인을 하나 클릭하고 마우스 오른쪽 버튼을 누르면..
- 새로운 어셈블리 코드를 만들거나 , 혹은 수정, 삭제 할 수 있다.
- Create new 나 Edit 를 눌렀을 때 나오는 어셈블리 코드 입력화면에서 코드 입력 
- 결과확인 : 메서드에서 마우스오른쪽 버튼을 누른 후 Update ILSpy object model을 선택하면
- C#코드에서 추가된 코드을 볼 수 있다.

*** 사용예) 로그로 파라메터 출력하기
예를들어 특정 파라메터의 값을 로그로 출력하고 싶다고 하자. 
- 그러면 어셈블리 언어로 표현했을 때  
- 특정 파라메터 로드 , Log 명령 로드의 두 개 라인이 된다.
- 그러면 적절한 위치에 다음의 두개 명령어를 순서대로 추가하면된다.
		
ldag.0는 출력하고 싶은 파라메터명
		
Log 메서드를 호출


*** 사용예 ) 메서드 호출 어셈블리 코드 추가하기
- 오퍼랜드를 클릭하면 호출할 수 있는 메서드를 선택하라는 창이 뜬다.
		
- 그러면 여기서 UnityEngine의 Log 메서드를 찾으면 된다.
		경로는 UnityEngine > UnityEngine > Debug > Log 이다.
		
- 마지막으로 insert하고자 하는 위치를 선택한다. 
		Append는 가장 마지막에 추가, 밑의 두 개는 선택된 라인의 앞이나 뒤에 추가
		


** 저장
수정한 모듈명 (Assembly-CSharp) 을 선택한뒤 마우스 오른쪽 버튼 클릭하여 저장한다.

* 작업요령
1. 공격가능해보이는 코드를 찾는다. 

2. 해당 코드가 사용되는지 확인한다. 
가장 간단한 방법은 스트링 값을 수정해보는 것이다. 

3. 해당 코드가 동작한다는 확인이 들면 실제 코드를 수정해본다. 


* 어셈블리코드 참고 
https://en.wikipedia.org/wiki/List_of_CIL_instructions
