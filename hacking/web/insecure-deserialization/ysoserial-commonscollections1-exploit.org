#+TITLE: Understanding ysoserial's CommonsCollections1 exploit

*All code snippets used in this post are sourced from ysoserial*


* An Overview
The CommonsCollections1 exploit builds a custom AnnotationInvocationHandler object that contains an InvokerTransformer (Apache Commons Collections class)payload, and outputs the serializaed object.[fn:1]

- 공격자가 만든 커스텀AnnotationInvocationHandler 클래스로 공격
- 이 커스텀 클래스는 아파치 Commons-Collections 클래스인 InvokerTransformer 인스턴스를 가지고 있음
- 이 커스텀 클래스는 직렬화된 객체를 생성함

When the serialized object is deserialized, the code path from AnnotationInvocationHandler's readObject leads to Invoker Transformer's payload, causing code execution.
- 이 직렬화된 객체가 역직렬화되면, AnnotationInvocationHandler의 readObject 메서드의 코드 패스가 Invoker Transformer의 페이로드를 호출하게 되어 코드 실행 취약점이 발생함


The image below shows the custom AnnotationInvocationHandler object used for RCE.





* Pre-requisities
An InvokerTransformer constructor takes three parameters:
- Name of the method
- parameter types the method accepts
- Parameter values

#+CAPTION: InvokerTransformer의 생성자
[[./common-collections/img/InvokerTransformer-constructor.png]]




* Payload Only Execution


* Putting it all together







* 참고
[fn:1] http://gursevkalra.blogspot.jp/2016/01/ysoserial-commonscollections1-exploit.html
