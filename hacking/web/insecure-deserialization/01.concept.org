* 공격개요
** Deserialization 공격 동향
OWASP TOP 2017에 신규 포함
Common-collections 취약점으로 한번 떠들썩했었음
최근 동향
CVE 발표 건수?



* 직렬화/역직렬화 개념
직렬화 개념은 Java에만 있는가?
직렬화는 대부분의 언어에서 지원한다. 
https://ko.wikipedia.org/wiki/%EC%A7%81%EB%A0%AC%ED%99%94


직렬화 : 메모리 상에 존재하는 객체를 어떤 데이터 포맷으로 변환하는 것 (나중에 쓰기위해)
역직렬화는 반대 : 데이터 포맷을 입력받아서 객체를 다시 만들어내는 것
왜 필요한가? / 언제쓰이는가?
	-데이터로서 보존할 때
	-통신할 때
	-예를들면, JSON 이나 XML형식으로 표현된 문자열도 직렬화의 한 예이다.
	-또한, 각 언어별로 직렬화 메카니즘이 존재. 이 때는 별도의 포맷으로 변환된다. 


JAVA에서 직렬화/역직렬화하는 방법
MyJavaTest 클래스의 serialization 패키지에 샘플 코드 해놓았다. 참조
[[./img/java-serial-ex1.png]]

[[./img/java-serial-ex2.png]]


* 샘플 프로그램 공격
** 공격 원리
** 공격 페이로드 만들기
** 방어방법
*** 기본 방어방법
*** 방어 후 공격이 통하는지 시연


* 실제 라이브러리 공격
** Common-collections
** 취약한 라이브러리 소스
** 안전한 라이브러리 소스

* 진단에서의 활용 - Java Serial Killer


