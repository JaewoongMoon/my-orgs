#+TITLE: CVE-2018-6389 Apache ModSecurity を使用した対応
#+AUTHOR: jwmoon

* 概要
- スクリプトを使用した対応方法は、2つの欠点が存在
- 一つ目は、ワードプレスのバージョンをアップグレードするたびにパッチが必要ないという点
- 二番目は、管理者ページの読み込みが遅くなるという点
- アプリケーションではなく、Webサーバーの機能を活用して、この脆弱性に対応する。
- この脆弱性は、多くの同じ要求をサーバーが制限なしに受け入れるときに発生する。
- サーバー側で受け入れる要求の数に制限をかけたら、DOS攻撃を防ぐことができる。

* 適用方法
** ModSecurityインストール
設置環境はubuntuである。

#+BEGIN_SRC bash
apt install libapache2-modsecurity
mv /etc/modsecurity/modsecurity.conf-recommended /etc/modsecurity/modsecurity.conf
#+END_SRC


** Apacheでmodsecurityを使用するように設定
~/etc/apache2/mods-enabled/security2.conf~ ファイルが次のようになっていることを確認する。

~IncludeOptional /etc/modesecurity/*.conf~ がない場合は追加する。

[[./img/3-apache-security2.conf.png]]

** Apache再起動
上記のプロセスに問題がなければ、Apacheを再起動する。

#+BEGIN_SRC bash
service apache2 restart
#+END_SRC

** ModSecurity動作するかどうかを確認
- security2モジュールが動作していることを確認する。

#+BEGIN_SRC bash
sudo apachectl -M | grep --color security2
#+END_SRC

- ModSecurityの監査ログの生成を確認
~/var/log/apache2/modsec_audit.log~ ファイルが作成されたことを確認する。

** Rule 追加

ModSecurityインストールに異常がなければ、以下のルールを ~/etc/modsecurity/modsecurity.conf~ に加える。

#+BEGIN_SRC conf
SecRule REQUEST_URI "@rx (?i:/wp-admin/load-scripts.php?.*?(load%5B%5D|load\[\]|load%5B\]|load\[%5D)=([^&,]*,){20,})" "id:1,msg:'Potential use of CVE-2018-6389',deny"
#+END_SRC

このルールが意味するのは、20個以上のジャバスクリプトロード要求を禁止するものである。

今回の脆弱性は、パラメータに181つのJavaScriptの名前を書いて送信しDOS攻撃だった。

したがって、その数を20個未満に制限すれば、攻撃を防ぐのに有効である。

以下は同じ方法でスタイルシートの読み込みも20未満に制限するルールである。このルールも追加する。

#+BEGIN_SRC conf
SecRule REQUEST_URI "@rx (?i:/wp-admin/load-styles.php?.*?(load%5B%5D|load\[\]|load%5B\]|load\[%5D)=([^&,]*,){20,})" "id:2,msg:'Potential use of CVE-2018-6389',deny"
#+END_SRC

** Apache再起動
ルールを適用するために、もう一度、Apacheを再起動する。

#+BEGIN_SRC bash
service apache2 restart
#+END_SRC


* 結果
** 20以上のJavaScriptの読み込み要求のテスト

~http://192.168.56.101/wordpress/wp-admin/load-scripts.php?c=1&load[]=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21~ リクエストを送った時のサーバ側の応答は以下の通りである。403 Forbidden応答が出力されたことを確認することができる。

#+CAPTION: サーバー側の応答
[[./img/3-mod-sec-result-res.png]]

ModSecurity監査ログは、次のとおりである。CVE-2018-6389の可能性があるというログを確認することができる。

#+CAPTION: 監査ログ
[[./img/3-mod-sec-result-log.png]]

** DOS攻撃のテストツール（doser.py）でテスト
POCで使用したツールを使用してテストしてみる。

#+BEGIN_SRC bash 
python doser.py -g 'http://192.168.56.101/wordpress/load-scripts.php?c=1&load%5B%5D=eutil,common,wp-a11y,sack,quicktag,colorpicker,editor,wp-fullscreen-stu,wp-ajax-response,wp-api-request,wp-pointer,autosave,heartbeat,wp-auth-check,wp-lists,prototype,scriptaculous-root,scriptaculous-builder,scriptaculous-dragdrop,scriptaculous-effects,scriptaculous-slider,scriptaculous-sound,scriptaculous-controls,scriptaculous,cropper,jquery,jquery-core,jquery-migrate,jquery-ui-core,jquery-effects-core,jquery-effects-blind,jquery-effects-bounce,jquery-effects-clip,jquery-effects-drop,jquery-effects-explode,jquery-effects-fade,jquery-effects-fold,jquery-effects-highlight,jquery-effects-puff,jquery-effects-pulsate,jquery-effects-scale,jquery-effects-shake,jquery-effects-size,jquery-effects-slide,jquery-effects-transfer,jquery-ui-accordion,jquery-ui-autocomplete,jquery-ui-button,jquery-ui-datepicker,jquery-ui-dialog,jquery-ui-draggable,jquery-ui-droppable,jquery-ui-menu,jquery-ui-mouse,jquery-ui-position,jquery-ui-progressbar,jquery-ui-resizable,jquery-ui-selectable,jquery-ui-selectmenu,jquery-ui-slider,jquery-ui-sortable,jquery-ui-spinner,jquery-ui-tabs,jquery-ui-tooltip,jquery-ui-widget,jquery-form,jquery-color,schedule,jquery-query,jquery-serialize-object,jquery-hotkeys,jquery-table-hotkeys,jquery-touch-punch,suggest,imagesloaded,masonry,jquery-masonry,thickbox,jcrop,swfobject,moxiejs,plupload,plupload-handlers,wp-plupload,swfupload,swfupload-all,swfupload-handlers,comment-repl,json2,underscore,backbone,wp-util,wp-sanitize,wp-backbone,revisions,imgareaselect,mediaelement,mediaelement-core,mediaelement-migrat,mediaelement-vimeo,wp-mediaelement,wp-codemirror,csslint,jshint,esprima,jsonlint,htmlhint,htmlhint-kses,code-editor,wp-theme-plugin-editor,wp-playlist,zxcvbn-async,password-strength-meter,user-profile,language-chooser,user-suggest,admin-ba,wplink,wpdialogs,word-coun,media-upload,hoverIntent,customize-base,customize-loader,customize-preview,customize-models,customize-views,customize-controls,customize-selective-refresh,customize-widgets,customize-preview-widgets,customize-nav-menus,customize-preview-nav-menus,wp-custom-header,accordion,shortcode,media-models,wp-embe,media-views,media-editor,media-audiovideo,mce-view,wp-api,admin-tags,admin-comments,xfn,postbox,tags-box,tags-suggest,post,editor-expand,link,comment,admin-gallery,admin-widgets,media-widgets,media-audio-widget,media-image-widget,media-gallery-widget,media-video-widget,text-widgets,custom-html-widgets,theme,inline-edit-post,inline-edit-tax,plugin-install,updates,farbtastic,iris,wp-color-picker,dashboard,list-revision,media-grid,media,image-edit,set-post-thumbnail,nav-menu,custom-header,custom-background,media-gallery,svg-painter' -t 9999
#+END_SRC


結果は以下の通りである。

[[./img/3-mod-sec-result-doser.png]]


多少CPU使用率が上がったが、以前のように100％に近く上がらないのでサービスには問題がないレベルであった。

したがってModSecurityを利用した方法は、本脆弱性（CVE-2018-6389）に対して効果的だと判断される。



* Ref
- https://www.rastating.com/protecting-wordpress-against-cve-2018-6389/
- https://www.digitalocean.com/community/tutorials/how-to-set-up-modsecurity-with-apache-on-ubuntu-14-04-and-debian-8
