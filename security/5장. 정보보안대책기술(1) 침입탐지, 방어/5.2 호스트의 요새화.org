#+TITLE: 호스트의 요새화

* 호스트 요새화의 개요
** 요새화의 필요성
- 어플라이언스 제품이라면 출하시점에서 일정 레벨의 보안 대책이 되어 있다고 생각해도 좋다.
- 그렇지만 범용적인 서버제품은 포장을 풀어서 케이블류를 접속해서 IP랑 필요한 설정만 하면 바로 쓸수있게 되어있다. 
- 사용성은 좋지만 보안성이 떨어짐
- 또한 최신버전의 소프트웨어 설치되어 있지 않을 가능성이 높다.
- 따라서 요새화가 필요하다. 특히 외부에 공개되는 서버는 필수다.


** 요새화의 중요성
- 보통 기업의 인터넷 접속 환경에서는 방화벽이 설치되어 있다.
- 하지만 그 것으로 호스트가 요새화된 것은 아니다. 
- 예를들어 방화벽은 TCP 80번 포트(HTTP)를 무조건 허용하도록 되어있는데,
- 웹 서버측에서 요새화가 되어 있지 않으면 SQL인젝션 등의 공격을 당할 수 있다.
- WAF, IPS 등을 설치하는 것도 대응 방법이지만 우선 처음에 실시해야할 대책은 웹 서버 요새화이다.
- 인터넷에서는 포트 스캔등의 조사행위는 무차별적으로, 일상적으로 일어나고 있다.
- 때문에 요새화가 되지 않은 서버는 바로 발견될 위험성이 있다. 
- 요새화가 되지 않은 서버를 발견한 해커는 그 보안 레벨이 낮다고 판단하여 추가적인 공격 행위를 할 수 있다. 
- 반대로 요새화가 잘 된 서버는 공격 시도를 단념하게 만들 수 있다. 


* 요새화의 주요한 실시항목
** 최적의 패티션 설계
- 가장 기본적인 원칙은 '용도나 갱신빈도가 크게 다른 데이터를 같은 파티션에 보관하지 않는다' 이다.
ex) OS 커널 영역 , 어플리케이션 프로그램, 유저 데이터 저장 영역, 로그 저장 영역 등으로 나눠서 사용

파티션을 나누는 것으로 다음과 같은 이점이 있다. 
- 백업이나 버전업을 하기 쉬워진다.
- 하드디스크의 논리적인 장애에 대응을 하기 쉬워진다.
- 어플리케이션 영역의 용량증가가 시스템 영역에 영향을 미치지 않는다. 

반대로 너무 상세하게 나눠도 여러 단점이 나타나므로 적절하게.


** 안전한 파일 시스템 선택
- OS의 종류에 따라서 인스톨 시에 몇 개의 파일 시스템을 선택할 수 있다.
- 파일 시스템의 종류에 따라 파일이나 디렉토리 별로 권한을 설정하는 것이 가능/불가능, 암호화 기능이 존재/미존재 등의 차이가 있으므로 가장 안전한 파일 시스템을 선택한다. 

** 최신버전의 소프트웨어를 최소구성으로 인스톨하기
- 오래된 버전의 OS나 SW에는 이미 알려진 각종 취약점이 존재
- 설치시에는 '표준인스톨'이나 '풀인스톨'을 하지말고 '최소인스톨'이나 '커스텀인스톨'을 선택해서 필요 최소한도의 기능만을 설치하도록 한다.


** 패치 적용
- 최신 패치 적용

** 불필요한 서비스나 기능 정지
- 최소구성으로 인스톨해도 필요없는 기능/서비스, 필요없는 커맨드가 있을 수 있다. 이런 것들을 정지한다.


** 불필요한 그룹, 계정 삭제 및 불필요한 공유자원 제거
- 인스톨이 완료된 직후의 OS에는 필요없는 유저그룹이나 유저계정이 존재하고 있는 경우가 있다. 
- 그 것을 확실하게 지워둔다. 
- 시스템에 표준으로 존재하고 있는 계정은 공격자고 추측하기 쉽다.
- 따라서 가능하면 그 이름도 바꿔두는 것이 좋다.
- 예를들어, 윈도에는 Administrator 라는 관리자 계정이 있는데, 이 계정의 명칭을 변경하는 것이 가능
- 또한, 윈도 환경에서는 관리자 권한으로 로그인되었을 때, 네트워크를 통해 접근가능한상태(공유상태)가 되어 있는 디렉토리나 드라이브가 존재하는 경우가 있기 때문에, 그러한 공유 상태를 제거해두는 것이 바람직하다. 
- 또한, 윈도 환경에서 로그인 하지 않아도 컴퓨터의 공유자원이나 계정정보를 취약할 수 있는 '익명접속' 기능이 활성화되어 있는 경우도 있으므로 이 것도 레지스트리 설정을 통해 무효화해둔다. 
 

** 추측이 곤란한 패스워드 설정 및 패스워드 체크 기능 유효화
- 유효한 모든 계정에 대해서 추측이 곤란한 패스워드를 설정한다. 
- 패스워드 설정시 패스워드 룰을 설정해두는 것이 좋다. (8자이상, 숫자/영문자/특수문자 조합 등)
- 특히, 계정에 록아웃(Lock out) 설정을 하는 것이 중요


** 디렉토리, 파일, 프로그램 등에의 접근권한 설정
- 불필요하게 setuid/setgid 설정이 되어 있는 것을 제거
- 웹 어플리케이션에서도 CGI프로그램이 저장되어 있는 디렉토리의 권한 설정이 심각한 취약점이 되는 경우가 있으므로 주의가 필요


** 로그 설정
- 디렉토리 접근이나 로그인 성공/실패 이력, 기타 보안에 관계된 경고 로그 등을 얻을 수 있도록 설정

요새화는 한번 한다고 끝나는 것이 아니라 매일 새로운 취약점이 나오고 있으므로 그에 맞게 조정하고 변경하는 작업을 꾸준히,반복적으로 해야 한다 .


