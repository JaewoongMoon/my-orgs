* 2.2 포트 스캔
** 2.2.1 포트 스캔의 목적과 실행 방법
*** 포트 스캔의 목적
열려있는 포트, 제공 중인 서비스 및 버전, OS 및 버전 정보 등을 얻기 위해 => *스택 핑거 프린팅* 이라고 함

특히, 내부 네트웍 목적으로 설계된 프로그램이 외부에서 접근 가능하게 되어있는 경우 위험함. 
(telnet, pop3, snmp, rlogin, rsh 등)

*** 포트 스캔 실행방법
텔넷 등을 이용해 수동으로 하는 방법도 있지만 대개의 경우 nmap을 사용

** 2.2.2 포트 스캔의 종류와 구조
*** TCP 커넥트 스캔
- 3웨이 핸드쉐이크로 커넥션이 확립되는지를 통해 상태를 확인
- 가장 많이 활용됨
- 3웨이 핸드쉐이크를 완료하므로 서버의 로그에 기록이 남는다. 
- 서버 로그 분석을 통해 포트스캔을 받은 것을 확인할 수 있다. 

*** TCP 하프 스캔 (TCP SYN 스캔)
- 스텔스 스캔
- SYN 패킷만 보내고 응답 패킷을 보고 포트 열림 여부를 판단
- 응답이 SYN/ACK 이면 열린 것으로,  RST/ACK 이면 열리지 않은 것으로 판단
- 서버에 로그 남지 않음. 

*** UDP 스캔
- TCP 스캔에 비해 정확도 떨어진다.
- 응답이 없으면 액티브, ICMP port unreachable 응답을 받으면 비액티브 상태로 판단한다. 

*** 기타 스텔스 스캔
- TCP 의 정상 커넥션에서는 있을 수 없는 패킷을 보내 타겟 포트의 상태를 판단한다.
**** TCP FIN 스캔
- FIN 플래그가 ON

**** TCP ACK 스캔
- ACK 플래그가 ON

**** TCP Null 스캔
- 코드 비트의 모든 플래그가 OFF

**** TCP 크리스마스 트리 스캔
- FIN, PSH, URG 플래그가 모두 ON
 

** 2.2.3 포트 스캔에의 대책
*** 예방, 방지

*** 탐지, 추적
IDS, IPS : IDS, IPS 도입시 스텔스 스캔도 탐지할 수 있다. 

그러나 각 포트 별로 어느 정도 시간 간격으로, 또한 포트 번호를 랜덤하게 해서 스캔할 경우 탐지가 아주 어려워 진다. 

