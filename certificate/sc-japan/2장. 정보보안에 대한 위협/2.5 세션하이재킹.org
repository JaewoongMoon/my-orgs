#+TITLE: 세션 하이재킹

* 세션 하이재킹의 개요
세션 하이재킹이 성공하면 서버로 가장하거나 혹은 클라이언트로 가장하는 것이 가능해짐 

이로 인해 가능한 시나리오는 다음과 같다

- 정당한 서버로 가장하여 클라이언트의 비밀정보(신용카드번호, 인증번호, 개인정보 등)를 훔친다.
- 정당한 서버(DNS서버)로 가장하여 클라이언트에게 위조된 응답을 보내 해킹 사이트로 유도한다.
- 정당한 클라이언트로 가장하여 서버에 침입, 관리자 권한 탈취, 기밀정보 열람, 정보 조작, 삭제 등을 시도
- 클라이언트에 대해서는 정당한 서버로, 서버에 대해서는 정당한 클라이언트로 위장하여 중간에서 통신 데이터를 열람 (중간자 공격, Man-in-the-middle Attack)

세션 하이재킹은 다음과 같은 취약점을 통해 가능하다.
- 프로토콜 사양의 취약점
- 프로토콜의 구현상(OS 레벨)의 취약점
- 어플리케이션(세션 관리)의 취약점


* 세션 하이재킹의 종류와 실행 방법
** TCP 세션 하이재킹
- 서버와 클라이언트에 각각 잘못된 시퀀스 넘버를 위조해서 연결된 세션에 잠시 혼란을 준 뒤 자신이 끼어들어가는 방식 (공격자가 클라이언를 가장한다.)


*** 공격절차
1. 3way-handshaking 과정이 성립하기 전(클라이언트가 보낸 ACK패킷이 서버에 도착하기 전)에 공격자는 서버에 자신을 클라이언트로 위조해서 RST 패킷을 보낸다. 
2. 서버가 공격자의 RST 패킷을 먼저 받으면, 사용자의 ACK패킷은 무시한다. 
3. 공격자는 서버로 새롭게 시퀀스 번호를 설정한 SYN패킷을 보낸다. 
4. 서버는 이 패킷에 대해 새롭게 시퀀스 번호를 설정해서 SYN/ACK 패킷을 보낸다.이 패킷은 사용자에게 도착하지만(사용자의IP가설정되어 있으므로) 사용자는 SYN을 보낸적이 없으므로 무시된다.
5. 공격자는 서버로 ACK패킷을 보낸다. (이 때, 시퀀스 번호는 추측한 값을 사용)
6. 추측한 값이 맞으면 3way-handshaking이 성립되어 공격자는 클라이언트 행세를 할 수 있게 된다.  

*** IP 스푸핑
- 각 OS는 시퀀스번호를 예측하기 힘들게 하기 위해 난수를 사용, but 일부 오래된 OS에서는 난수도 예측할 수 있는 패턴이 있는 취약점이 있음
- 이 것을 악용해서 발신자IP주소를 사칭해서 타겟 서버의 ./rhost 파일(신뢰하는 호스트를 정의한 파일)에 echo 커맨드로 ++(모든 호스트를 신뢰)를 추가해서 무조건적으로 접속할 수 있도록 하는 공격(IP스푸핑)이 있다. 
- 발신자의 IP 주소만으로 접속을 허용하는 rcp, rlogin 등의 서비스를 구동하는 경우 유효함
- 인터넷 환경에서는 공격가능성 아주 적음

** UDP 세션 하이재킹
- UDP에는 TCP와 같은 세션 확인과정이 없기 때문에 세션 하이재킹 방법도 단순
- 클라이언트로부터의 요청에 대해 서버보다 빨리 응답을 보내면 세션하이재킹이 된다. 
- 이를 응용한 공격이 DNS 캐시 포이즈닝 공격이다. 


** Web서버와 클라이언트 사이의 세션 하이재킹
- 웹은 원래 그 구조상 각 요청마다 세션이 완결됨.
- 이런 구조 위에서 각 웹 어플리케이션에서 각 사용자를 구별하고 세션을 관리하기 위해 세션ID를 발급
- 이 세션ID를 URL이나 쿠키에 세팅해서 통신하는 것으로 세션을 확립/구분
- 공격자는 세션을 ID값을 예측하거나, 중간에서 도청하거나 하여 세션을 탈취

다음 특징이 있을 경우 세션 하이재킹 위험도가 높아진다.
- 세션ID가 단순해서 추측, 위조가 쉬움
- 세션관리 정보가 노출거나 혹은 암호화되어 있지 않다.
- XSS취약점으로 쿠키에 설정된 세션 값이 노출된다.


** 인증서버와 클라이언트 사이의 세션 하이재킹
- 공격자가 인증서버로 위장하여 클라이언트로부터의 요구를 받아서 세션을 하이재킹하는 방법
- *클라이언트에서 서버의 신뢰성을 확인하는 수단이 없을 경우* 이 문제가 발생할 가능성이 높아짐


** 위조 ARP에 의한 세션 하이재킹 (ARP 스푸핑)
- 공격자가 자신의 MAC주소와 정당한 호스트의 IP주소를 조합해서 위조 ARP응답 패킷을 보냄
- 그 결과 ARP캐시의 내용이 갱신됨
- 많은 OS가 ARP 응답 패킷을 받을 경우 무조건적으로 ARP캐시를 갱신한다는 것을 악용한 공격
- 하이재킹을 성공시키려면 위조 ARP응답 패킷을 보내는 것 뿐만 아니라 TCP 시퀀스 번호도 위조해야 하나, 그 것을 자동으로 해주는 툴이 있다. 



* 세션고정(Fixation)의 실행 방법
- 공격자가 타겟이 되는 Web사이트의 로그인화면등에 접속해서, 실제 발생되는 세션Id를 입수한다.
- 입수한 세션Id가 포함된 URL을 타겟 유저에게 보내서(피싱 메일등) 클릭을 유도한다.
- 타겟 유저가 해당 링크로 접속해서 공격자가 보낸 세션ID를 사용해서 로그인을 시도
- 공격자는 동일한 세션ID를 사용해서 타겟 사이트에 접속가능

** 이 공격은 다음과 같은 조건을 만족했을 때 발생
 - 정당한 세션ID를 입수하기 쉬운 환경(로그인화면이 표시된 시점에 세션ID가 발급되어, 로그인 성공 후에도 동일한 세션Id가 사용되는 환경)
- 타겟이 되는 웹 서버에서 URL Reriting기능으로 URL의 세션ID를 쿠키로 지정하는 기능이 활성화되어 있는 경우
- 타겟 사이트에 로그인 권한을 가진 유저를 알고 있어서 피싱 메일을 보낼 수 있는 경우
- 유저가 피싱메일에 속아서 로그인하는 것
- 또한, Cookie Monster Bug가 있는 브라우저에서도 이 공격이 발생할 가능성이 높아진다.
- 해당 버그는 쿠키의 domain속성 값이 제대로 동작하지 않아서 설정한 범위를 넘어서 쿠키 유효하게 동작하는 버그임


* 세션 하이재킹 대책
- 패킷의 유실 및 재전송 증가를 탐지(ACK 패킷)
- 데이터 전송시 암호화 (시퀀스번호 추측이 어려워짐)
- 지속적인 인증

** 예방, 방지
*** TCP, UDP 세션 하이재킹
- OS/SW 최신화
- TLS, IPSec, SSH 등 패킷 위조가 어려운 암호화 프로토콜을 사용
- 취약점 검사

*** 웹 세션 하이재킹
- TLS
- 세션관리 시스템을 자사 개발하지 않고 WAS서버의 기능을 이용
- 굳이 자사 개발할경우는 난수나 해시 값등을 이용, 추측 곤란한 값을사용
- 취약점 검사
- 웹서버 앞에 리버스 프록시 서버나 WAF를 설치

*** 인증 서버 세션 하이재킹
- TLS


*** ARP 스푸핑
- 허브를 물리적으로 보호하여 수상한 물리적 기기의 접속을 막는다. 
- 부정PC접속탐지 시스템
- ARP스푸핑 방어 기능이 있는 허브 사용

** 탐지, 추적
- 타겟 호스트 로그에서 수상한 세션을 찾기
- IDS, IPS, 리버스 프록시 서버, WAF등
- 부정PC접속 탐지 시스템으로 LAN상에 접속한 부정한 기기를 탐지


** 회복
- 피해 상황을 조사하여 필요한 데이터를 회복
- 원인 파악, 대응
