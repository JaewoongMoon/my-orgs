* JDEE Function and Shortcuts

** Function Table

| Function                  | Command (M-x)                               | Shortcut    |
|---------------------------+---------------------------------------------+-------------|
| Registering JDK           | custom-var => jdee-jdk-registry             |             |
| Selecting JDK             | custom-var => jdee-jdk                      |             |
| Set Classpaths (Global)   | custom-var => jdee-global-classpath         |             |
| Set Classpaths (Compile)  | custom-var => jdee-compile-option-classpath |             |
| Set Classpaths (Run)      | custom-var => jdee-run-option-classpath     |             |
| Set Classpaths (Debug)    | custom-var => jdee-db-option-classpath      |             |
| JavaDoc Comment           |                                             | C-c C-v j   |
| Create JavaDoc            | jdee-javadoc-make                           |             |
| Override Method           | jdee-wiz-override-method                    | C-c C-v o   |
| Implement Method          | jdee-wiz-implement-interface                | C-c C-v i   |
| Getter / Setters          | jdee-wiz-get-set-methods                    |             |
| Create Import             | jdee-import-find-and-import                 | C-c C-v C-z |
| Create All Classes Import | jdee-import-all                             | C-c C-v z   |
| Delete unnecessary Import | jdee-import-kill-extra-imports              |             |
| Show Code Recomment Popup | jdee-complete-menu                          | C-c C-v C-. |
| Compile                   |                                             | C-c C-v C-c |
| Execute                   |                                             | C-c C-v C-r |
| Debug                     |                                             | C-c C-v C-d |
| Build                     |                                             | C-c C-v C-b |
| Create new Project        | jdee-create-new-project                     |             |
|                           |                                             |             |


** 클래스 패스 관련
이맥스에서 import 문을 자동으로 추가하려면 해당클래스가 "클래스패스변수" 에 등록이 되어 있어야 한다. 


*** 프로젝트 내의 클래스들을 classpath 에 추가하는 방법은?

/bin 을 클래스패스(jdee-global-classpath)에 등록하면 된다!

이 것을 프로젝트 specific 하게 설정하는 방법은?
prj.el 파일에 init.el 안에 있는 설정 코드와 동일한 코드를 붙여넣기하면된다! 
ex)
 '(jdee-global-classpath
   (quote
	("d:\\java_libs\\log_lib\\jcl-over-slf4j-1.7.24.jar" "d:\\java_libs\\log_lib\\jul-to-slf4j-1.7.24.jar" "d:\\java_libs\\log_lib\\log4j-1.3alpha-7.jar" "d:\\java_libs\\log_lib\\log4j-over-slf4j-1.7.24.jar" "d:\\java_libs\\log_lib\\osgi-over-slf4j-1.7.24.jar" "d:\\java_libs\\log_lib\\slf4j-api-1.7.24.jar" "d:\\java_libs\\log_lib\\slf4j-ext-1.7.24.jar" "d:\\java_libs\\log_lib\\slf4j-jcl-1.7.24.jar" "d:\\java_libs\\log_lib\\slf4j-jdk14-1.7.24.jar" "d:\\java_libs\\log_lib\\slf4j-log4j12-1.7.24.jar" "d:\\java_libs\\log_lib\\slf4j-migrator-1.7.24.jar" "d:\\java_libs\\log_lib\\slf4j-nop-1.7.24.jar" "d:\\java_libs\\log_lib\\slf4j-simple-1.7.24-sources.jar" "d:\\java_libs\\log_lib\\slf4j-simple-1.7.24.jar" "D:\\git\\project\\MsWordReport\\bin" "D:\\java_libs\\spring_security_lib\\spring-security-acl-3.2.7.RELEASE.jar" "D:\\java_libs\\spring_security_lib\\spring-security-config-3.2.7.RELEASE.jar" "D:\\java_libs\\spring_security_lib\\spring-security-core-3.2.7.RELEASE.jar" "D:\\java_libs\\spring_security_lib\\spring-security-taglibs-3.2.7.RELEASE.jar" "D:\\java_libs\\spring_security_lib\\spring-security-web-3.2.7.RELEASE.jar"
	 )))

그리고 prj.el 파일에는 프로젝트별로 다른 라이브러리를 설정하면 된다.


*** 클래스 패스 지정해주는 스크립트

클래스패스를 하나하나 적는 것은 너무 귀찮은 작업이기 때문에 스크립트를 작성했다. 

D:\java_libs\emacs-jdee-classpath-add.py [jar파일이 있는 디렉토리명]


*** 클래스패스만 추가하면 이맥스에서 바로 인식되는 것인가? 

클래스패스를 prj.el 파일에 저장한 후라면 바로 인식된다. 
(자바 파일에서 create import 를 하면된다.)


*** import 추가하기  

C-c C-v z

** 코드 완성하기 
C-c C-v C-. 으로 되어 있으나 나는 .만 눌러도 동작하게 하고 싶다. 
키바인딩 설정을 바꿔야 할 것 같다. 
현재 버퍼에 설정된 키바인딩은 C-h b 로 볼 수 있다고 한다. 

또는, 방금 설치한 M-x helm-descbinds 로도 볼 수 있다. 

-----------------------------------------------
결국, auto-complete 가 가장 괜찮은 것 같다. 
이 것을 사용하도록 설정하였다. 

** 인터페이스의 메서드 오버라이딩-구현-하기

jdee-wiz-implement-interface (C-c c-v i) 커맨드를 실행하면 하단에 입력창이 나타난다. 
입력창에 인터페이스 명을 적으면 해당 인터페이스의 메서드들의 스켈레톤 코드가 생성된다. 



