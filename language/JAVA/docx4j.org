#+TITLE: Docx4j

* 개요
- java 코드로 ms 워드 문서를 작성할 수 있게 해주는 프레임웍


* 특징
- OpenXML 스펙을 자바 코드로 구현한 프로젝트이다. 
  (C#, VB 도 있고, 아마도 파이썬이나 다른 언어로도 구현된 것이 있을 것이다.)
- WML (WordProcessingML) 은 OpenXML 스펙의 일부이다. MS워드는 WML을 사용한다.


* Open XML
** 개요
- MS 오피스 제품군의 문서의 컨텐츠를 정의하는 언어이다.
- 워드를 위한 WordprocessingML, 엑셀을 위한 SpreadsheetML, 파워포인트를 위한 PresentationML 이 있다.
- ISO/IEC 29500 에 정의됨. 

** WordprocessingML
*** 기본 정보
- docx 파일은 사실 zip 포맷이다!
- zip 파일안에 각 기능별 폴더와 XML파일들이 있는 구조이다.

*** 폴더 구조
**** _rels
- Relationships 파일이 저장되어 있다. 
- Relationship 파일 자체는 링크정보만 제공할 뿐이다.

*** 엘레먼트
**** <w:document></w:document>
- 최상위.  문서의 컨텐츠를 정의한다.

*** Document Body
document body 에는 두 가지 main group 이 있다. 

**** block-level content
- 메인 스트럭처를 제공한다.
- paragraph, tables 같은 것
- inline content 를 포함한다.
		
**** inline content
- text 와 image 등
- text 는 여러개의 다른 run 들로 나뉘어 진다. 
- run 은 포맷팅을 적용할 수 있는 가장 작은 단위이다.



*** lsdException
-LatentStyleException

** SpreadsheetML

** PresentationML

** DrawingML



* 클래스 계층 구조
- 다음 XML 계층구조로 docx파일이 구성된다.
- 스타일은 부모 엘레먼트에 적용된 것이 있으면 상속받는 형태이다. HTML의 스타일 적용과 비슷하다.
- 자식 엘레먼트에서 새로 적용한 스타일이 있으면 그 것이 우선된다.

** WordprocessingMLPackage
*** MainDocumentPart
**** Document
***** Body
****** P
- Paragraph
- 레이아웃을 위한 기본 유닛이다.
- 마진, 탭 등을 적용가능하다.

******* R
- Run
- 특정 텍스트 영역(region)을  정의(define)한다.
- 주로 문장을 표현할 때 사용한다.

******** Text
- 실제 텍스트
******** FldChar
- FieldChar
******** Rpr
- Run properties

#+BEGIN_SRC xml
<w:rPr>
      <w:rFonts w:ascii="Meiryo" w:hAnsi="Meiryo" w:eastAsia="Meiryo" w:cs="Meiryo"/>
       <w:sz w:val="20"/>
       <w:szCs w:val="20"/>
       <w:lang w:val="ja-JP" w:eastAsia="ja-JP" w:bidi="en-US"/>
</w:rPr>
#+END_SRC

********* RFonts
- 폰트를 지정한다. 지정할 수 있는 속성값은 다음과 같다.
- ASCII : ASCII 범위의 캐릭터에 대해서 지정할 폰트
- hAnsi :High ANSI
- cs (Complex Script) : 아스키 범위를 넘어서는 유니코드 캐릭터에 대한 폰트
- EastAsia

********* sz
- 사이즈
- 지정된 값의 1/2 이 폰트의 사이즈가 된다. (20일 경우 폰트 사이즈10)

********* szCs
- FontSizeComplexScript
- complex script 캐릭터인 경우 적용되는 폰트 사이즈

******* PPr
- ParagraphProperties 
- 문단(패러그래프)의 스타일 정의
#+BEGIN_SRC xml
<w:pPr>
   <w:spacing w:before="360" w:after="120" w:line="480" w:lineRule="auto" w:beforeAutospacing="0" w:afterAutospacing="0"/>
</w:pPr>
#+END_SRC



******** spacing
- after : 문단의 마지막 라인이 끝난 뒤에 추가될 공간을 정의
- before : 문단의 첫 번째 라인이 시작하기 전에 추가될 공간을 정의
- line : 문장 사이의 수직 spacing 공간을 정의. (vertical spacing)

#+CAPTION: PPr 의 vertical spacing을 지정하는 java 예제
#+BEGIN_SRC Java
    PPr rightPPr = factory.createPPr(); 
	rightPPr.setJc(jc);
	Spacing spacing = new Spacing();
	spacing.setAfter(new BigInteger("100"));
	rightPPr.setSpacing(spacing);
#+END_SRC

******** PStyle
- ParagraphStyle

******* NumPr
- Number Properties
******** NumId
숫자 값

******** Ilvl
- 숫자 레벨 (뎁스)
- 탑 레벨은 0 임. 

******* Jc
- Justification
- 정렬 속성을 정의
- 텍스트의 중앙정렬, 왼쪽 정렬, 오른쪽 정렬 등을 지정할 수 있다. 

******* ind
- indentation
- 들여쓰기 속성의 적의

*** NumberingDefinitionsPart
**** Emulator


* 참고자료
- wml 설명 : https://www.tutorialspoint.com/wml/wml_elements.htm
- 소스코드 : https://github.com/plutext/docx4j/blob/master/src/main/java/org/docx4j/
- 샘클코드 : https://github.com/plutext/docx4j/tree/master/src/samples/docx4j/org/docx4j/samples
- 폰트변경 : http://www.docx4java.org/forums/docx-java-f6/setting-font-in-default-styles-t388.html
- OpenXML 설명 : http://officeopenxml.com/WPspacing.php
- OpenXML 매뉴얼 : openxmldeveloper.org/cfs.../Open-XML-Explained.pdf



