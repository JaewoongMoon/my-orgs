#+TITLE: Reactive 란?

* 배경
프로젝트를 스프링5로 업그레이드하는 과정에서 스프링5에서 바뀐점이 뭐가 있나 살펴보다가 리액티브로의 전환이라는 부분을 봤다. 
리액티브가 뭔가? 추상적인 느낌은 가지고 있지만 누군한테 설명해보라하면 설명할 자신이 없다. 그래서 조사하면서 정리해본다. 

* 리액티브 프로그래밍이란?
- 한국어로는 반응형 프로그래밍이라고 하는 듯하다. 
- RX(Reactive Extension)은 Reactive programming 을 가능하게 해주는 API같은 것이다. 
- 각 언어 진영에서 reactive programming을 할 수 있게 도와주는 확장 프로그램들이 있다. 
- 자바 진영에서는 RxJava 라는 것이 나와있는 듯하다. 
- 리액티브 프로그래밍은 OOP와 같은 하나의 패러다임이다. 
- 리액티브 프로그래밍은 함수형 프로그래밍(FP) 패러다임을 활용한다. 
- 기존의 메인 스트림 언어들(C, C++,Java) 은 명령형 패러다임이다. 
- 명령형 패러다임의 반대는 선언형 패러다임이다. 
- OOP는 명령형 패러다임의 일종, FP 는 선언형 패러다임의 일종이다. 
- 리액티브 프로그래밍의 핵심은 비동기(Async)와 Observer 디자인 패턴이다. 
- 리액티브 프로그래밍의 예는 페이스북 게시글을 보고있을 때 다른 유저가 좋아요를 누르면 페이지 새로 고침 없어도 실시간으로 카운트가 올라는 것을 들 수 있다. 

** Functional Reactive Programming (FRP)
- 리액티브 프로그래밍을 FP의 원리를 이용해서 구현하는 것 
- 즉, 비동기적인 데이터 처리를 간단한 함수를 통해 수행하는 프로그래밍 
- RX의 정체는 FRP의 원리를 활용해서 비동기적인 이벤트를 손쉽게 처리하기 위해 만들어진 API이다. 
- RX의 목적은 '비동기 계의 map, filter, reduce 가 되자'는 것이다. [fn:3]
- Reactive Programming 에서 가장 어려운 부분은 *Reactive 하게 생각하기* 라고 한다. [fn:4] 
- 기존의 명령형 패러다임에 익숙한 사람은 자연스럽게 문제를 명령형 패러다임으로 풀려고 하기 때문. 
- *reactive programming 은 비동기 데이터 스트림에 대한 프로그래밍이다.*


* 참고 자료
[fn:1] https://brunch.co.kr/@yudong/33
[fn:2] http://zeddios.tistory.com/303
[fn:3] https://m.blog.naver.com/jdub7138/220983291803
[fn:4] https://gist.github.com/staltz/868e7e9bc2a7b8c1f754
