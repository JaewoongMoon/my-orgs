#+TITLE: 2. 프로젝트 생성 및 세팅

* 프로젝트 생성
간단한 웹 프로그램을 만들면서 감을 익혀보자. 

먼저 다음 명령으로 스켈레톤 프로젝트를 생성한다.

설치할 경로는 /var/www/zend-training 로 설정하였다.

#+BEGIN_SRC shell-script
$ composer create-project -s dev zendframework/skeleton-application [설치할경로]
#+END_SRC

프로젝트를 만들 때 최소 필요사항으로 만들 것인지 물어보는데, 이 때 N으로 대답하지 않으면 필요한 
모듈들(db, form검증 관련)이 설치되지 않으므로 주의한다. 

* 모듈 만들기
프로젝트는 여러개의 모듈로 구성된다. 모듈은 일종의 도메인처럼 생각하면 될 것 같다. 

예제에서는 앨범 모듈을 만드는 것을 설명하고 있다. 

** 디렉토리 구조 생성
수동으로 디렉토리 구조를 만든다. 

디렉토리 구조는 다음과 같다. 

디렉토리명을 보면 대략적인 역할을 추측가능하다.

#+BEGIN_SRC shell-script
zend-training/
    /module     <-- 프로그래머가 작성한 모듈들이 위치함. 
        /Album
            /config   <-- 모듈별 설정
            /src
                /Controller    <-- 컨트롤러 
                /Form        <-- 폼 관련
                /Model       <-- 모델 객체 및 서비스 객체들
            /view
                /album
                    /album   <-- 뷰 파일들 (CRUD)
#+END_SRC


** 설정파일 위치 지정
Zend는 모듈을 설정하기 위해서 ModuleManager를 제공한다고 한다. 

ModuleManager는 프로그래머가 작성한 모듈들을 찾는다. 

작성한 모듈의 설정 파일이 어떤 것인지 지정해줘야 ModuleManager가 찾을 수 있을 것이다.

module/Album/src/Module.php 파일을 생성하고 다음 코드를 쓴다.

#+BEGIN_SRC php
namespace Album;

use Zend\ModuleManager\Feature\ConfigProviderInterface;

class Module implements ConfigProviderInterface
{
    public function getConfig()
    {
        return include __DIR__ . '/../config/module.config.php';
    }
}
#+END_SRC

ModuleManager 가 알아서 getConfig() 를 호출할 것이다.


** 모듈을 Autoloading 리스트에 등록

컴포저에 의해 오토로딩이 되도록 설정해보자. 

프로젝트 루트의 composer.json 파일에 album 컨텍스트를 추가한다. 

#+BEGIN_SRC json
"autoload": {
    "psr-4": {
        "Application\\": "module/Application/src/",
        "Album\\": "module/Album/src/"             <--추가된 부분
    }
},
#+END_SRC



** 모듈 설정파일 작성
module/Album/config 에 위치한 module.config.php 파일에 album 컨트롤러와 view 파일 경로를 설정해준다.

JAVA의 spring-servlet 과 비슷한 기능을 한다. 

#+BEGIN_SRC php
namespace Album;

use Zend\ServiceManager\Factory\InvokableFactory;

return [
    'controllers' => [
        'factories' => [
            Controller\AlbumController::class => InvokableFactory::class,
        ],
    ],
    'view_manager' => [
        'template_path_stack' => [
            'album' => __DIR__ . '/../view',
        ],
    ],
];
#+END_SRC

** 어플리케이션에서 새로 작성한 모듈을 알 수 있도록 세팅

어플리케이션 루트의 config 디렉토리에 modules.config.php 파일이 있다. 

(module/Album/config/module.config.php 와 혼동하면 안 된다!)

이 파일에는 어플리케이션에서 어떤 모듈들을 로딩할 것인지 설정하는 것이 적혀있다. 

새로 작성한 Album 모듈을 추가해준다.

#+BEGIN_SRC php
return [
    'Zend\Form',
    'Zend\Db',
    'Zend\Router',
    'Zend\Validator',
    'Application',
    'Album',          // <-- Add this line
];

#+END_SRC


* 참고자료
https://docs.zendframework.com/tutorials/getting-started/modules/


